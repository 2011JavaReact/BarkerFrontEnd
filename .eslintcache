[{"/Users/acapp5K1/1-revature-code/barkerfrontend/src/index.tsx":"1","/Users/acapp5K1/1-revature-code/barkerfrontend/src/reportWebVitals.ts":"2","/Users/acapp5K1/1-revature-code/barkerfrontend/src/App.tsx":"3","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/NavBarContainer.tsx":"4","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/LoginForm.tsx":"5","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/FooterContainer.tsx":"6","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/Home.tsx":"7","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/NewUserForm.tsx":"8","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/UserPreferences.tsx":"9","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/DogCard.tsx":"10","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/NewDogForm.tsx":"11","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/DogSwipe.tsx":"12"},{"size":500,"mtime":1608316356430,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608316356430,"results":"15","hashOfConfig":"14"},{"size":2750,"mtime":1609433518429,"results":"16","hashOfConfig":"14"},{"size":2802,"mtime":1609432567027,"results":"17","hashOfConfig":"14"},{"size":2669,"mtime":1609432567026,"results":"18","hashOfConfig":"14"},{"size":274,"mtime":1609277719056,"results":"19","hashOfConfig":"14"},{"size":956,"mtime":1609432567026,"results":"20","hashOfConfig":"14"},{"size":2879,"mtime":1609432567027,"results":"21","hashOfConfig":"14"},{"size":8083,"mtime":1609277719055,"results":"22","hashOfConfig":"14"},{"size":2823,"mtime":1609444203380,"results":"23","hashOfConfig":"14"},{"size":5761,"mtime":1609432567027,"results":"24","hashOfConfig":"14"},{"size":2511,"mtime":1609444340437,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1xlkvmj",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/acapp5K1/1-revature-code/barkerfrontend/src/index.tsx",[],["57","58"],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/reportWebVitals.ts",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/App.tsx",["59","60","61","62","63","64","65"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  BrowserRouter,\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  RouteComponentProps,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport NavBarContainer from \"./containers/NavBarContainer\";\nimport Home from \"./components/Home\";\nimport FooterContainer from \"./containers/FooterContainer\";\nimport NewUserForm from \"./components/user/NewUserForm\";\nimport NewDogForm from \"./components/dog/NewDogForm\";\nimport UserPreferences from \"./components/user/UserPreferences\";\nimport DogCard from \"./components/dog/DogCard\";\nimport DogSwipe from \"./containers/DogSwipe\";\n\nimport { stringify } from \"postcss\";\nimport LoginForm from \"./components/LoginForm\";\n\ninterface IProps {}\n\ninterface IState {\n  username: string;\n  id: number;\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      username: \"none\",\n      id: -1,\n    };\n  }\n\n  onLogin(newName: string, newId: number) {\n    this.setState({ username: newName, id: newId });\n  }\n\n  onLogout() {\n    this.setState({ username: \"none\", id: -1 });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App mx-auto text-2xl\">\n          <nav className=\"fixed inset-x-0 top-0 h-12 bg-gray-500\">\n            <NavBarContainer\n              user={this.state.username}\n              onLogout={this.onLogout.bind(this)}\n            ></NavBarContainer>\n          </nav>\n          <div className=\"main-container h-screen mt-12 mb-10\">\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/users/new\" component={NewUserForm} />\n            <Route\n              exact\n              path=\"/login\"\n              render={(routerProps) => (\n                <LoginForm {...routerProps} onLogin={this.onLogin.bind(this)} />\n              )}\n            />\n            {/* <Route exact path=\"/logout\"   render={(routerProps) => <LoginForm {...routerProps} onLogin = {this.onLogin.bind(this)} /> }  /> */}\n            <Route\n              exact\n              path=\"/users/preferences\"\n              render={(routerProps) => <UserPreferences {...routerProps} />}\n            />\n            <Route exact path=\"/dog\" component={NewDogForm} />\n            <Route exact path=\"/dogs\" component={DogCard} />\n            <Route\n              exact\n              path=\"/swipe\"\n              render={(routerProps) => (\n                <DogSwipe {...routerProps} userId={this.state.id} />\n              )}\n            />\n          </div>\n          <footer className=\"fixed inset-x-0 bottom-0 h-8 bg-blue-500\">\n            <FooterContainer />\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/NavBarContainer.tsx",["66","67"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface IProps{\n  user: string;\n  onLogout: () => void\n  //changeLogin: (newName: string) => void;\n}\n\nexport default class NavBarContainer extends React.Component<IProps> {\n    constructor(props: IProps) {\n      super(props);\n      this.state = {\n        user: props.user\n      };\n    }\n\n    changeLogin(newName: string)\n    {\n      this.setState({user: newName});\n    }\n\n    render(){\n\n    //Three Conditions. \n    //1. Not logged in. \n    //2. Logged in as User.\n    //3. Logged in as Shelter.\n      if(this.props.user == \"User\")\n      {\n        return (\n          <div className=\"grid grid-cols-6 items-center h-full\">\n            <NavLink to=\"/\">\n              <div className=\"bg-blue-500\">Barker</div>\n            </NavLink>\n            <div className=\"col-span-3 flex flex-row justify-around p-2\">\n              <NavLink to=\"/users/preferences\">\n                <div className=\"bg-blue-500\">User Preferences</div>\n              </NavLink>\n              <div className=\"bg-blue-500\">Swipe/NI</div>\n              <div className=\"bg-blue-500\">Liked Dogs/NI</div>\n            </div>\n            <div className=\"col-span-2 flex flex-row justify-around p-2\">\n              <div className=\"bg-blue-500\">{this.props.user}</div>\n            <NavLink to=\"/\">\n            <button className=\"rounded-md bg-white\" onClick={this.props.onLogout}>LOGOUT/NI</button>\n            </NavLink>\n            </div>\n          </div>\n          );\n      }\n      else if(this.props.user == \"Shelter\"){\n        return (\n          <div className=\"grid grid-cols-6 items-center h-full\">\n          <NavLink to=\"/\">\n            <div className=\"bg-blue-500\">Barker</div>\n          </NavLink>\n          <div className=\"col-span-3 flex flex-row justify-around p-2\">\n            <div className=\"bg-blue-500\">My Dogs/NI</div>\n            <div className=\"bg-blue-500\">Add Dog/NI</div>\n          </div>\n          <div className=\"col-span-2 flex flex-row justify-around p-2\">\n            <div className=\"bg-blue-500\">{this.props.user}</div>\n            <NavLink to=\"/\">\n            <button className=\"rounded-md bg-white\" onClick={this.props.onLogout}>LOGOUT/NI</button>\n            </NavLink>\n          </div>\n        </div>\n            );\n        }\n        else\n        {\n          return(\n            <div className=\"grid grid-cols-6 items-center h-full\">\n              <NavLink to=\"/\">\n                <div className=\"bg-blue-500\">Barker</div>\n              </NavLink>\n              <div className=\"col-span-2 flex flex-row justify-around p-2\">\n              <NavLink to=\"/login\">\n              <button className=\"rounded-md bg-white\">LOGIN</button>\n              </NavLink>\n            </div>\n            </div>        \n          );\n        }  \n    }\n  }\n  ","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/LoginForm.tsx",["68","69","70","71","72"],"import React, { ReactPropTypes } from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\ninterface IProps{\n    onLogin: (newName: string, id: number) => void\n}\n\nexport default class LoginForm extends React.Component<IProps> {\n    constructor(props: IProps) {\n        super(props);\n      }\n\n      state = {\n          redirect: false,\n          user: {\n            userName: \"\",\n            password: \"\",\n          },\n      }\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newUser: any = { ...this.state.user };\n    newUser[event.target.name] = event.target.value;\n\n    this.setState({ user: newUser });\n  };\n\n  //Change this to Login in. Needs error if login unsuccessful\n  //And redirect with this state if successful\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    console.log(this.state);\n    // Axios.post(\"http://localhost:8080/users\", this.state.user).then((resp) => {\n    //   console.log(resp.data);\n    //   this.setState({ userId: resp.data.id, redirect: true });\n    // });\n    this.setState({redirect: true });\n    this.props.onLogin(this.state.user.userName, 1);\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n      );\n    } else {\n      return (\n          \n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Login Form</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                ref=\"username\"\n                name=\"userName\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={this.state.user.userName}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"password\"\n                id=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={this.state.user.password}\n              ></input>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Login!\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/FooterContainer.tsx",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/Home.tsx",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/NewUserForm.tsx",["73","74"],"import React from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport UserPreferences from \"./UserPreferences\";\n\nexport default class NewUserForm extends React.Component {\n  state = {\n    redirect: false,\n    userId: \"\",\n    user: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      preferencesSet: false,\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newUser: any = { ...this.state.user };\n    newUser[event.target.name] = event.target.value;\n\n    this.setState({ user: newUser });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    console.log(this.state);\n    Axios.post(\"http://localhost:8080/users\", this.state.user).then((resp) => {\n      console.log(resp.data);\n      this.setState({ userId: resp.data.id, redirect: true });\n    });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/users/preferences\",\n            state: { userId: this.state.userId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Create User Account</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Full Name\"\n                onChange={this.handleChange}\n                value={this.state.user.userName}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={this.state.user.email}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={this.state.user.password}\n              ></input>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Sign Up!\n              </button>\n            </form>\n            <Link className=\"text-2xl\" to=\"/\">\n              Create a Shelter Account Instead\n            </Link>\n          </div>\n          {/* <UserPreferences userId={this.state.userId} /> */}\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/UserPreferences.tsx",["75","76","77"],"import React, { ComponentProps } from \"react\";\nimport { Location } from \"history\";\nimport { Link, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { StaticContext } from \"react-router\";\n\ninterface IProps extends RouteComponentProps<any> {\n  userId: string;\n}\n\ninterface IState {\n  redirect: boolean;\n  preferences: {\n    userId: number;\n    preferencesSet: boolean;\n    breedPreference: string;\n    agePreference: string;\n    sizePreference: string;\n    genderPreference: string;\n    goodWithPreference: string;\n    coatLengthPreference: string;\n    energyLevelPreference: string;\n  };\n}\n\nexport default class UserPreferences extends React.Component<\n  IProps & ComponentProps<any>,\n  IState\n> {\n  state = {\n    redirect: false,\n    preferences: {\n      userId: (this.props.location.state.userId as any) || \"\",\n      preferencesSet: false,\n      breedPreference: \"any\",\n      agePreference: \"any\",\n      sizePreference: \"any\",\n      genderPreference: \"any\",\n      goodWithPreference: \"any\",\n      coatLengthPreference: \"any\",\n      energyLevelPreference: \"any\",\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ): void | undefined => {\n    const newPrefs: any = { ...this.state.preferences };\n\n    newPrefs[event.target.name] = event.target.value;\n    newPrefs.preferencesSet = true;\n    console.log(newPrefs);\n    this.setState({ preferences: newPrefs });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void | undefined => {\n    event.preventDefault();\n\n    Axios.put(\n      \"http://localhost:8080/users/preferences\",\n      this.state.preferences\n    ).then((resp) => {\n      this.setState({ redirect: true });\n      console.log(resp.data);\n    });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { userId: this.state.preferences.userId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Set Dog Preferences</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Breed</div>\n\n                {console.log(\"UserID State: \", this.state.preferences.userId)}\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"breedPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.breedPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Golden Retreiver\">Golden Retreiver</option>\n                    <option value=\"Get List from DB\">Get List from DB</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Age</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"agePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.agePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Puppy\">Puppy</option>\n                    <option value=\"Young\">1-3 Years</option>\n                    <option value=\"Adult\">4-8 Years</option>\n                    <option value=\"Senior\">9+ Years</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Size</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"sizePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.sizePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Small\">Under 15 lbs</option>\n                    <option value=\"Medium\">15 - 35 lbs</option>\n                    <option value=\"Large\">35 - 75 lbs</option>\n                    <option value=\"Ex-Large\">75+ lbs</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Gender</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"genderPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.genderPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Good With</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"goodWithPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.goodWithPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Everyone\">Everyone</option>\n                    <option value=\"Kids\">Kids</option>\n                    <option value=\"Adults\">Adults Only</option>\n                    <option value=\"Family\">Family Only</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Coat Length</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"coatLengthPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.coatLengthPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Short\">Short</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Long\">Long</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Energy Level</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"energyLevelPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.energyLevelPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </select>\n                </div>\n              </div>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-blue-400\"\n                type=\"submit\"\n              >\n                Save Preferences\n              </button>\n            </form>\n            <Link className=\"text-2xl\" to=\"/\">\n              Skip Preferences (all available dogs shown)\n            </Link>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/DogCard.tsx",["78","79","80","81","82","83","84"],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/NewDogForm.tsx",["85"],"import React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\nexport default class NewDogForm extends React.Component {\n  state = {\n    redirect: false,\n    shelterId: 1,\n    dogId: -1,\n    dog: {\n      name: \"\",\n      age: \"\",\n      sex: \"\",\n      breed: \"\",\n      image: \"\",\n      location: \"\",\n      sheddingLevel: \"\",\n      energyLevel: \"\",\n      bio: \"\",\n      isAdopted: false,\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newDog: any = { ...this.state.dog };\n    newDog[event.target.name] = event.target.value;\n    this.setState({ dog: newDog });\n  };\n\n  handleSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ): void | undefined => {\n    const newSelection: any = { ...this.state.dog };\n    newSelection[event.target.name] = event.target.value;\n    this.setState({ dog: newSelection });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    console.log(this.state);\n    Axios.post(\n      \"http://localhost:8080/shelters/\" + this.state.shelterId + \"/dogs\",\n      this.state.dog\n    ).then((resp) => {\n      console.log(resp.data);\n      this.setState({ dogId: resp.data.id, redirect: true });\n    });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { dogId: this.state.dogId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-40%\">\n            <div className=\"text-3xl\">Create New Dog</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div>Name</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"name\"\n                required\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n                value={this.state.dog.name}\n              ></input>\n              <div>Age</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"number\"\n                name=\"age\"\n                required\n                placeholder=\"Age (years)\"\n                onChange={this.handleChange}\n                value={this.state.dog.age}\n              ></input>\n              <div>Gender</div>\n              <select\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"sex\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.sex}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n              <div>Breed</div>\n              <select\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"breed\"\n                required\n                placeholder=\"Breed\"\n                onChange={this.handleSelect}\n                value={this.state.dog.breed}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Alaskan Malamute\">Alaskan Malamute</option>\n                <option value=\"Golden Retriever\">Golden Retriever</option>\n                <option value=\"TODO\">TODO: GET BREEDS FROM DB.</option>\n              </select>\n              <div>Image Link</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"image\"\n                placeholder=\"Link to Image\"\n                onChange={this.handleChange}\n                value={this.state.dog.image}\n              ></input>\n              <div>Shedding Level</div>\n              <select\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"sheddingLevel\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.sheddingLevel}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n              <div>Energy Level</div>\n              <select\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"energyLevel\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.energyLevel}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n              <div>Bio</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"bio\"\n                placeholder=\"Bio\"\n                onChange={this.handleChange}\n                value={this.state.dog.bio}\n              ></input>\n\n              <button\n                className=\"text-2xl rounded-md py-2 px-2 mt-5 mb-20 bg-blue-300\"\n                type=\"submit\"\n              >\n                Create Dog\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/DogSwipe.tsx",["86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":2,"column":8,"nodeType":"95","messageId":"96","endLine":2,"endColumn":12},{"ruleId":"93","severity":1,"message":"97","line":5,"column":3,"nodeType":"95","messageId":"96","endLine":5,"endColumn":16},{"ruleId":"93","severity":1,"message":"98","line":7,"column":3,"nodeType":"95","messageId":"96","endLine":7,"endColumn":11},{"ruleId":"93","severity":1,"message":"99","line":9,"column":3,"nodeType":"95","messageId":"96","endLine":9,"endColumn":22},{"ruleId":"93","severity":1,"message":"100","line":10,"column":3,"nodeType":"95","messageId":"96","endLine":10,"endColumn":9},{"ruleId":"93","severity":1,"message":"101","line":11,"column":3,"nodeType":"95","messageId":"96","endLine":11,"endColumn":13},{"ruleId":"93","severity":1,"message":"102","line":22,"column":10,"nodeType":"95","messageId":"96","endLine":22,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":29,"column":26,"nodeType":"105","messageId":"106","endLine":29,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":52,"column":31,"nodeType":"105","messageId":"106","endLine":52,"endColumn":33},{"ruleId":"93","severity":1,"message":"107","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":31},{"ruleId":"93","severity":1,"message":"99","line":2,"column":20,"nodeType":"95","messageId":"96","endLine":2,"endColumn":39},{"ruleId":"93","severity":1,"message":"108","line":2,"column":41,"nodeType":"95","messageId":"96","endLine":2,"endColumn":45},{"ruleId":"93","severity":1,"message":"109","line":3,"column":8,"nodeType":"95","messageId":"96","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":10,"column":5,"nodeType":"112","messageId":"113","endLine":12,"endColumn":8},{"ruleId":"93","severity":1,"message":"99","line":2,"column":20,"nodeType":"95","messageId":"96","endLine":2,"endColumn":39},{"ruleId":"93","severity":1,"message":"114","line":4,"column":8,"nodeType":"95","messageId":"96","endLine":4,"endColumn":23},{"ruleId":"93","severity":1,"message":"115","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"116","line":3,"column":16,"nodeType":"95","messageId":"96","endLine":3,"endColumn":21},{"ruleId":"93","severity":1,"message":"117","line":5,"column":10,"nodeType":"95","messageId":"96","endLine":5,"endColumn":23},{"ruleId":"93","severity":1,"message":"109","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"93","severity":1,"message":"118","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":26},{"ruleId":"93","severity":1,"message":"119","line":2,"column":28,"nodeType":"95","messageId":"96","endLine":2,"endColumn":36},{"ruleId":"93","severity":1,"message":"98","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":18},{"ruleId":"93","severity":1,"message":"108","line":3,"column":20,"nodeType":"95","messageId":"96","endLine":3,"endColumn":24},{"ruleId":"93","severity":1,"message":"99","line":3,"column":26,"nodeType":"95","messageId":"96","endLine":3,"endColumn":45},{"ruleId":"120","severity":1,"message":"121","line":45,"column":11,"nodeType":"122","endLine":49,"endColumn":13},{"ruleId":"93","severity":1,"message":"108","line":2,"column":20,"nodeType":"95","messageId":"96","endLine":2,"endColumn":24},{"ruleId":"93","severity":1,"message":"108","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":14},{"ruleId":"93","severity":1,"message":"116","line":2,"column":16,"nodeType":"95","messageId":"96","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"98","line":2,"column":23,"nodeType":"95","messageId":"96","endLine":2,"endColumn":31},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'RouteComponentProps' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'stringify' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ReactPropTypes' is defined but never used.","'Link' is defined but never used.","'Axios' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'UserPreferences' is defined but never used.","'Location' is defined but never used.","'Route' is defined but never used.","'StaticContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]