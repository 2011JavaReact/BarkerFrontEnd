[{"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\index.tsx":"1","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\reportWebVitals.ts":"2","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\App.tsx":"3","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\FooterContainer.tsx":"4","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\NavBarContainer.tsx":"5","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\DogSwipe.tsx":"6","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\Home.tsx":"7","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\LoginForm.tsx":"8","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\Logout.tsx":"9","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\UserHome.tsx":"10","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\UserPreferences.tsx":"11","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\ShelterHome.tsx":"12","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\NewUserForm.tsx":"13","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\NewDogForm.tsx":"14","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\ModifyUser.tsx":"15","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\LikedDogs.tsx":"16","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\EditDogForm.tsx":"17","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\ModifyShelter.tsx":"18","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\NewShelterForm.tsx":"19","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\ShelterDogs.tsx":"20","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\DogCard.tsx":"21"},{"size":517,"mtime":1609698763567,"results":"22","hashOfConfig":"23"},{"size":440,"mtime":1609698763568,"results":"24","hashOfConfig":"23"},{"size":6030,"mtime":1609698763550,"results":"25","hashOfConfig":"23"},{"size":299,"mtime":1609698763558,"results":"26","hashOfConfig":"23"},{"size":4009,"mtime":1609698763558,"results":"27","hashOfConfig":"23"},{"size":4365,"mtime":1609710002243,"results":"28","hashOfConfig":"23"},{"size":1552,"mtime":1609698763551,"results":"29","hashOfConfig":"23"},{"size":4014,"mtime":1609698763551,"results":"30","hashOfConfig":"23"},{"size":389,"mtime":1609698763552,"results":"31","hashOfConfig":"23"},{"size":1480,"mtime":1609698763552,"results":"32","hashOfConfig":"23"},{"size":8232,"mtime":1609698763557,"results":"33","hashOfConfig":"23"},{"size":1365,"mtime":1609698763552,"results":"34","hashOfConfig":"23"},{"size":3753,"mtime":1609698763557,"results":"35","hashOfConfig":"23"},{"size":6168,"mtime":1609698763553,"results":"36","hashOfConfig":"23"},{"size":10797,"mtime":1609698763556,"results":"37","hashOfConfig":"23"},{"size":2793,"mtime":1609702176174,"results":"38","hashOfConfig":"23"},{"size":7257,"mtime":1609698763553,"results":"39","hashOfConfig":"23"},{"size":4347,"mtime":1609698763554,"results":"40","hashOfConfig":"23"},{"size":4478,"mtime":1609698763555,"results":"41","hashOfConfig":"23"},{"size":2534,"mtime":1609702641183,"results":"42","hashOfConfig":"23"},{"size":3141,"mtime":1609709972947,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1sv3s6n",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\index.tsx",[],["91","92"],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\reportWebVitals.ts",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\App.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\FooterContainer.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\NavBarContainer.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\containers\\DogSwipe.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\Home.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\LoginForm.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\Logout.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\UserHome.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\UserPreferences.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\ShelterHome.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\NewUserForm.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\NewDogForm.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\ModifyUser.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\user\\LikedDogs.tsx",["93","94","95","96"],"import React from \"react\";\r\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\ninterface IProps {\r\n  userId: number;\r\n}\r\ninterface IState {\r\n  dogs: Array<dog>;\r\n}\r\ninterface dog {\r\n  id: number;\r\n  name: string;\r\n  age: string;\r\n  breed: string;\r\n  image: string;\r\n  sex: string;\r\n  location: string;\r\n  sheddingLevel: string;\r\n  energyLevel: string;\r\n  bio: string;\r\n  shelter: string;\r\n  adopted: boolean;\r\n  shelterId: number;\r\n}\r\n\r\nexport default class LikedDogs extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      dogs: [],\r\n    };\r\n    this.getDogs();\r\n  }\r\n\r\n  getAdoptedText = (adopted: boolean): string =>\r\n  {\r\n    return adopted ? \"Adopted\" : \"Available\";\r\n  }\r\n\r\n  unLikeDog = (dogID: number): void => {\r\n    Axios.get(\"http://54.215.186.163:8080/Barker-api/users/\" + this.props.userId + \"/dogs/\" + dogID + \"/unlike\").then((resp) => {\r\n    this.setState({dogs: []});      \r\n    this.getDogs();\r\n        }).catch(err => {alert(\"There was an error unliking the dog\")});\r\n  }\r\n\r\n\r\n    getDogs = (): void => {\r\n          Axios.get(\"http://54.215.186.163:8080/Barker-api/users/\" + this.props.userId).then((resp) => {\r\n            //console.log(resp.data.dogs);\r\n            resp.data.likedDogs.forEach( (value: dog) => {\r\n                //console.log(value.bio);\r\n                this.state.dogs.push(value);\r\n            })\r\n            this.setState({dogs: this.state.dogs});\r\n          }).catch(err => {alert(\"There was an error getting the dogs\")});\r\n        \r\n    }\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n        {this.state.dogs.length < 1 ? (\r\n          <p className=\"text-purple-600 text-3xl\">\r\n            No Liked Dogs Yet - Select \"Swipe\" to view and \"Like\" dogs!\r\n          </p>\r\n        ) : null}\r\n        {this.state.dogs.map(({ id, name, image, age, sex, adopted, shelter, sheddingLevel, energyLevel, bio }) => (\r\n          <div key={id}>\r\n            <p>\r\n              {id}, {name}, {age}, {sex}, {this.getAdoptedText(adopted)}\r\n            </p>\r\n            <p>Located at {shelter}</p>\r\n            <p>Shedding Level: {sheddingLevel}</p>\r\n            <p>Energy Level: {energyLevel}</p>\r\n            <p>{bio}</p>\r\n            <img className=\"object-center mx-auto\"\r\n              width=\"200\"\r\n              height=\"100\"\r\n              src={image}\r\n              alt={\"Picture Unavailable\"}\r\n            />\r\n            <button\r\n              className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\r\n              onClick={this.unLikeDog.bind(this,id)}\r\n            >\r\n              Unlike Dog\r\n            </button>\r\n            <p> ------------------------- </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\EditDogForm.tsx",["97","98"],"import React from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport { getJSDocAugmentsTag } from \"typescript\";\r\n\r\ninterface IProps {\r\n  shelterId: number;\r\n}\r\n\r\ninterface IState{\r\n    redirect: boolean,\r\n    dog: {\r\n        id: number,\r\n        name: string,\r\n        age: string,\r\n        sex: string,\r\n        breed: string,\r\n        image: string,\r\n        sheddingLevel: string,\r\n        energyLevel: string,\r\n        bio: string,\r\n        isAdopted: boolean\r\n    }\r\n}\r\n\r\n\r\n export default class EditDogForm extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            redirect: false,\r\n            dog: {\r\n                id: -1,\r\n                name: \"\",\r\n                age: \"\",\r\n                sex: \"\",\r\n                breed: \"\",\r\n                image: \"\",\r\n                sheddingLevel: \"\",\r\n                energyLevel: \"\",\r\n                bio: \"\",\r\n                isAdopted: false,\r\n              }\r\n        };\r\n        this.getDog();\r\n      }\r\n\r\n      getDog = (): void => {\r\n        Axios.get(\"http://54.215.186.163:8080/Barker-api/dogs/\" + localStorage.getItem(\"dogId\")).then((resp) => {\r\n          console.log(resp.data);\r\n          this.setState({ dog: resp.data })\r\n          console.log(\"State: \" + this.state.dog);\r\n        }).catch(err => {alert(\"There was an error updating the dog\")});    \r\n  }\r\n\r\n  handleChange = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ): void | undefined => {\r\n    const newDog: any = { ...this.state.dog };\r\n    newDog[event.target.name] = event.target.value;\r\n    this.setState({ dog: newDog });\r\n    console.log(this.state.dog);\r\n  };\r\n\r\n  handleSelect = (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ): void | undefined => {\r\n    const newSelection: any = { ...this.state.dog };\r\n    newSelection[event.target.name] = event.target.value;\r\n    this.setState({ dog: newSelection });\r\n  };\r\n\r\n\r\n\r\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\r\n    event.preventDefault();\r\n    console.log(this.state);\r\n    Axios.put(\r\n      \"http://54.215.186.163:8080/Barker-api/dogs/update\",\r\n      this.state.dog\r\n    ).then((resp) => {\r\n      console.log(resp.data);\r\n      this.setState({redirect: true });\r\n    });\r\n  };\r\n\r\n  getAdoptedValue = (adopted: boolean): string =>\r\n  {\r\n    return adopted ? \"Adopted\" : \"Available\";\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n    if (this.state.redirect) {\r\n      return (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/shelterDogs\",\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"flex h-screen justify-center\">\r\n          <div className=\"m-12 w-40%\">\r\n            <div className=\"text-3xl\">Update Dog</div>\r\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\r\n              <div>Name</div>\r\n              <input\r\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n                placeholder=\"Name\"\r\n                onChange={this.handleChange}\r\n                value={this.state.dog.name}\r\n              ></input>\r\n              <div>Age</div>\r\n              <input\r\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                type=\"number\"\r\n                name=\"age\"\r\n                required\r\n                placeholder=\"Age (years)\"\r\n                onChange={this.handleChange}\r\n                value={this.state.dog.age}\r\n              ></input>\r\n              <div>Gender</div>\r\n              <select\r\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                name=\"sex\"\r\n                required\r\n                onChange={this.handleSelect}\r\n                value={this.state.dog.sex}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Male\">Male</option>\r\n                <option value=\"Female\">Female</option>\r\n              </select>\r\n              <div>Breed</div>\r\n              <input\r\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                name=\"breed\"\r\n                required\r\n                placeholder=\"Breed\"\r\n                onChange={this.handleChange}\r\n                value={this.state.dog.breed}\r\n              ></input>\r\n              <div>Image Link</div>\r\n              <input\r\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                type=\"text\"\r\n                name=\"image\"\r\n                placeholder=\"Link to Image\"\r\n                onChange={this.handleChange}\r\n                value={this.state.dog.image}\r\n              ></input>\r\n              <div>Shedding Level</div>\r\n              <select\r\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                name=\"sheddingLevel\"\r\n                required\r\n                onChange={this.handleSelect}\r\n                value={this.state.dog.sheddingLevel}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Low\">Low</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"High\">High</option>\r\n              </select>\r\n              <div>Energy Level</div>\r\n              <select\r\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                name=\"energyLevel\"\r\n                required\r\n                onChange={this.handleSelect}\r\n                value={this.state.dog.energyLevel}\r\n              >\r\n                <option value=\"\">Select</option>\r\n                <option value=\"Low\">Low</option>\r\n                <option value=\"Medium\">Medium</option>\r\n                <option value=\"High\">High</option>\r\n              </select>\r\n              <div>Bio</div>\r\n              <input\r\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                type=\"text\"\r\n                name=\"bio\"\r\n                placeholder=\"Bio\"\r\n                onChange={this.handleChange}\r\n                value={this.state.dog.bio}\r\n              ></input>\r\n\r\n            {/* <div>Is Adopted?</div>\r\n              <select\r\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\r\n                name=\"isAdopted\"\r\n                required\r\n                onChange={this.handleAdopted}\r\n                value={this.state.dog.isAdopted}\r\n              >\r\n                <option value={0}>Available</option>\r\n                <option value={1}>Adopted</option>\r\n              </select> */}\r\n              {/* <input type=\"checkbox\" name='isAdopted' onChange={this.handleChecked}/> */}\r\n              <button\r\n                className=\"text-2xl rounded-md py-2 px-2 mt-5 mb-20 bg-blue-300\"\r\n                type=\"submit\"\r\n              >\r\n                Update\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\ModifyShelter.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\NewShelterForm.tsx",[],"C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\shelter\\ShelterDogs.tsx",["99","100","101"],"import React from \"react\";\r\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\ninterface IProps {\r\n  shelterId: number;\r\n}\r\ninterface IState {\r\n  dogs: Array<dog>;\r\n}\r\ninterface dog {\r\n  id: number;\r\n  name: string;\r\n  age: string;\r\n  breed: string;\r\n  image: string;\r\n  sex: string;\r\n  location: string;\r\n  sheddingLevel: string;\r\n  energyLevel: string;\r\n  bio: string;\r\n  adopted: boolean;\r\n  shelterId: number;\r\n}\r\n\r\nexport default class ShelterDogs extends React.Component<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props);\r\n    this.state = {\r\n      dogs: [],\r\n    };\r\n    this.getDogs();\r\n  }\r\n\r\n  editDog = (dogId: number): void => {\r\n    localStorage.setItem(\"dogId\", dogId.toString());\r\n  }\r\n\r\n  getAdoptedText = (adopted: boolean): string =>\r\n  {\r\n    return adopted ? \"Adopted\" : \"Available\";\r\n  }\r\n\r\n  getDogs = (): void => {\r\n    Axios.get(\r\n      \"http://54.215.186.163:8080/Barker-api/shelters/\" + this.props.shelterId\r\n    )\r\n      .then((resp) => {\r\n        //console.log(resp.data.dogs);\r\n        resp.data.dogs.forEach((value: dog) => {\r\n          //console.log(value.bio);\r\n          this.state.dogs.push(value);\r\n        });\r\n        this.setState({ dogs: this.state.dogs });\r\n      })\r\n      .catch((err) => {\r\n        alert(\"There was an error getting the dogs\");\r\n      });\r\n  };\r\n\r\n\r\n  render(): React.ReactNode {\r\n    return (\r\n      <div>\r\n\r\n        {this.state.dogs.length < 1 ? (\r\n          <p className=\"text-yellow-400 text-3xl\">\r\n            No Dogs Yet - Select \"Add Dog\" to add your available dogs!\r\n          </p>\r\n        ) : null}\r\n        {this.state.dogs.map(({ id, name, image, age, sex, adopted, sheddingLevel,energyLevel, bio }) => (\r\n          <div key={id}>\r\n            <p>\r\n              {name}, {age}, {sex}, {this.getAdoptedText(adopted)}\r\n            </p>\r\n            <p>Shedding Level: {sheddingLevel}</p>\r\n            <p>Energy Level: {energyLevel}</p>\r\n            <p>{bio}</p>\r\n            <img className=\"object-center mx-auto\"\r\n              width=\"200\"\r\n              height=\"100\"\r\n              src={image}\r\n              alt={\"Picture Unavailable\"}\r\n            />\r\n              <Link to=\"/dog/modify\">\r\n              <button className=\"text-2xl rounded-full py-2 px-2 bg-red-400\" onClick={this.editDog.bind(this, id)}>\r\n                Edit Dog\r\n              </button>\r\n              </Link>\r\n            <p> ------------------------- </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\ysorh\\source\\repos\\Barker\\BarkerFrontEnd\\src\\components\\dog\\DogCard.tsx",["102"],"import React from \"react\";\r\n\r\ninterface IProps {\r\n  // dogImage: string;\r\n  returnLike: Function;\r\n  returnDislike: Function;\r\n  dogObject: {\r\n    adopted: boolean;\r\n    age: number;\r\n    bio: string;\r\n    breed: string;\r\n    energyLevel: string;\r\n    id: number;\r\n    image: string;\r\n    location: string;\r\n    name: string;\r\n    sex: string;\r\n    sheddingLevel: string;\r\n    shelter: string;\r\n    shelterId: number;\r\n  };\r\n}\r\n\r\nconst DogCard: React.FC<IProps> = (props) => {\r\n  const handleLike = () => {\r\n    props.returnLike(props.dogObject.id);\r\n  };\r\n\r\n  const handleDislike = () => {\r\n    props.returnDislike(props.dogObject.id);\r\n  };\r\n\r\n  return (\r\n    // <div className=\"flex bg-gray-200 p-8 justify-center h-screen max-h-96 align-middle\">\r\n    <div className=\"flex w-11/12 bg-gradient-to-br from-gray-600 to-purple-600 rounded-xl max-w-screen-lg mx-auto p-2\">\r\n      <div className=\"flex-none flex w-1/12\">\r\n        <button className=\"content-center\" onClick={handleDislike}>\r\n          Growl (Dislike)\r\n        </button>\r\n      </div>\r\n      {/* This is the container for the dog image and information */}\r\n      <div className=\"flex-none w-10/12 bg-gradient-to-br from-gray-400 to-purple-400 rounded-xl mx-auto p-2\">\r\n        <div className=\"mx-auto\">\r\n          <img\r\n            src={props.dogObject.image}\r\n            alt=\"Picture Unavailable\"\r\n            className=\"mx-auto w-10/12 rounded-xl\"\r\n          />\r\n        </div>\r\n\r\n        {/* This is for the dog information */}\r\n        <div className=\"flex flex-col w-3/4 mx-auto\">\r\n          {/* This is for the dog name and age */}\r\n          <div className=\"flex text-2xl font-semibold\">\r\n            <span>Name: {props.dogObject.name + \" ,\"}</span>\r\n            <span>&nbsp; Age: {props.dogObject.age}</span>\r\n          </div>\r\n\r\n          {/* This is for the other dog attributes */}\r\n          <div className=\"flex text-xl font-semibold text-gray-700\">\r\n            <span>Breed: {props.dogObject.breed + \" ,\"}</span>\r\n            <span>&nbsp; Gender: {props.dogObject.sex}</span>\r\n          </div>\r\n\r\n          <div className=\"flex text-xl font-semibold text-gray-700\">\r\n            <span>Energy Level: {props.dogObject.energyLevel + \" ,\"}</span>\r\n            <span>&nbsp; Coat Type: {props.dogObject.sheddingLevel}</span>\r\n          </div>\r\n          <div className=\"text-left text-xl font-semibold text-gray-700\">\r\n            About Me: {props.dogObject.bio}\r\n          </div>\r\n\r\n          <div className=\"text-left text-xl font-semibold text-gray-700\">\r\n            Located at Shelter: {props.dogObject.shelter}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-none flex content-center w-1/12\">\r\n        <button className=\"none\" onClick={handleLike}>\r\n          Bark (Like)\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DogCard;\r\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":39},{"ruleId":"107","severity":1,"message":"112","line":2,"column":41,"nodeType":"109","messageId":"110","endLine":2,"endColumn":45},{"ruleId":"113","severity":1,"message":"114","line":78,"column":13,"nodeType":"115","endLine":83,"endColumn":15},{"ruleId":"107","severity":1,"message":"112","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"116","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":2,"column":20,"nodeType":"109","messageId":"110","endLine":2,"endColumn":39},{"ruleId":"113","severity":1,"message":"114","line":79,"column":13,"nodeType":"115","endLine":84,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":44,"column":11,"nodeType":"115","endLine":48,"endColumn":13},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'RouteComponentProps' is defined but never used.","'Link' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'getJSDocAugmentsTag' is defined but never used.","no-global-assign","no-unsafe-negation"]