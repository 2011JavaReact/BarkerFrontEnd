[{"/Users/acapp5K1/1-revature-code/barkerfrontend/src/index.tsx":"1","/Users/acapp5K1/1-revature-code/barkerfrontend/src/reportWebVitals.ts":"2","/Users/acapp5K1/1-revature-code/barkerfrontend/src/App.tsx":"3","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/DogSwipe.tsx":"4","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/Home.tsx":"5","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/NewUserForm.tsx":"6","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/LoginForm.tsx":"7","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/NewDogForm.tsx":"8","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/DogCard.tsx":"9","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/ModifyUser.tsx":"10","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/NewShelterForm.tsx":"11","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/ModifyShelter.tsx":"12","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/FooterContainer.tsx":"13","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/UserPreferences.tsx":"14","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/ShelterDogs.tsx":"15","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/NavBarContainer.tsx":"16"},{"size":500,"mtime":1608316356430,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608316356430,"results":"19","hashOfConfig":"18"},{"size":5195,"mtime":1609450420059,"results":"20","hashOfConfig":"18"},{"size":4233,"mtime":1609460836790,"results":"21","hashOfConfig":"18"},{"size":1161,"mtime":1609444544003,"results":"22","hashOfConfig":"18"},{"size":3361,"mtime":1609444544009,"results":"23","hashOfConfig":"18"},{"size":3415,"mtime":1609444544005,"results":"24","hashOfConfig":"18"},{"size":5543,"mtime":1609444544006,"results":"25","hashOfConfig":"18"},{"size":2860,"mtime":1609453355205,"results":"26","hashOfConfig":"18"},{"size":9970,"mtime":1609444544008,"results":"27","hashOfConfig":"18"},{"size":4007,"mtime":1609444544007,"results":"28","hashOfConfig":"18"},{"size":3935,"mtime":1609444886221,"results":"29","hashOfConfig":"18"},{"size":274,"mtime":1609277719056,"results":"30","hashOfConfig":"18"},{"size":8083,"mtime":1609277719055,"results":"31","hashOfConfig":"18"},{"size":1826,"mtime":1609450420060,"results":"32","hashOfConfig":"18"},{"size":3418,"mtime":1609461514342,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1xlkvmj",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"36"},"/Users/acapp5K1/1-revature-code/barkerfrontend/src/index.tsx",[],["80","81"],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/reportWebVitals.ts",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/App.tsx",["82","83","84","85","86","87","88"],"import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  BrowserRouter,\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  RouteComponentProps,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport NavBarContainer from \"./containers/NavBarContainer\";\nimport Home from \"./components/Home\";\nimport FooterContainer from \"./containers/FooterContainer\";\nimport NewUserForm from \"./components/user/NewUserForm\";\nimport NewDogForm from \"./components/dog/NewDogForm\";\nimport UserPreferences from \"./components/user/UserPreferences\";\nimport DogCard from \"./components/dog/DogCard\";\nimport DogSwipe from \"./containers/DogSwipe\";\nimport { stringify } from \"postcss\";\nimport LoginForm from \"./components/LoginForm\";\nimport NewShelterForm from \"./components/shelter/NewShelterForm\";\nimport ModifyUser from \"./components/user/ModifyUser\";\nimport ModifyShelter from \"./components/shelter/ModifyShelter\";\nimport ShelterDogs from \"./components/shelter/ShelterDogs\";\n\ninterface IProps {}\n\ninterface IState {\n  username: string;\n  id: number;\n  userType: string;\n  //shelterName: string;\n  //shelterId: number;\n}\n\nclass App extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    if (localStorage.getItem(\"username\") == null) {\n      localStorage.setItem(\"username\", \"none\");\n      localStorage.setItem(\"id\", \"-1\");\n      localStorage.setItem(\"userType\", \"none\");\n    }\n    this.state = {\n      username: localStorage.getItem(\"username\")!,\n      id: parseInt(localStorage.getItem(\"id\")!, 10),\n      userType: localStorage.getItem(\"userType\")!,\n    };\n  }\n\n  onLogin(newName: string, newId: number, newUserType: string) {\n    this.setState({ username: newName, id: newId, userType: newUserType });\n    localStorage.setItem(\"username\", newName);\n    localStorage.setItem(\"id\", newId.toString());\n    localStorage.setItem(\"userType\", newUserType);\n  }\n\n  onLogout() {\n    this.setState({ username: \"none\", id: -1, userType: \"none\" });\n    localStorage.clear();\n\n    //loginShelter(shelterName: string, shelterId: number) {\n    //this.setState({ shelterName: shelterName, shelterId: shelterId });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App mx-auto text-2xl\">\n          <nav className=\"fixed inset-x-0 top-0 h-12 bg-gray-500\">\n            <NavBarContainer\n              userType={this.state.userType}\n              user={this.state.username + \": \" + this.state.id}\n              onLogout={this.onLogout.bind(this)}\n            ></NavBarContainer>\n          </nav>\n          <div className=\"main-container h-screen mt-12 mb-10\">\n            <Route exact path=\"/\" component={Home} />\n            <Route\n              exact\n              path=\"/users/new\"\n              render={(routerProps) => (\n                <NewUserForm\n                  {...routerProps}\n                  onCreate={this.onLogin.bind(this)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/shelters/new\"\n              render={(routerProps) => (\n                <NewShelterForm\n                  {...routerProps}\n                  onCreate={this.onLogin.bind(this)}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/shelters/modify\"\n              render={(routerProps) => (\n                <ModifyShelter {...routerProps} shelterId={this.state.id} />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/login\"\n              render={(routerProps) => (\n                <LoginForm {...routerProps} onLogin={this.onLogin.bind(this)} />\n              )}\n            />\n            {/* <Route exact path=\"/logout\"   render={(routerProps) => <LoginForm {...routerProps} onLogin = {this.onLogin.bind(this)} /> }  /> */}\n            <Route\n              exact\n              path=\"/users/preferences\"\n              render={(routerProps) => <UserPreferences {...routerProps} />}\n            />\n\n            <Route exact path=\"/dog\" component={NewDogForm} />\n            <Route exact path=\"/dogs\" component={DogCard} />\n\n            <Route\n              exact\n              path=\"/users/modify\"\n              render={(routerProps) => (\n                <ModifyUser {...routerProps} userId={this.state.id} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/swipe\"\n              render={(routerProps) => (\n                <DogSwipe {...routerProps} userId={this.state.id} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/dog/new\"\n              render={(routerProps) => (\n                <NewDogForm {...routerProps} shelterId={this.state.id} />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/shelterDogs\"\n              render={(routerProps) => (\n                <ShelterDogs {...routerProps} shelterId={this.state.id} />\n              )}\n            /> \n          </div>\n          <footer className=\"fixed inset-x-0 bottom-0 h-8 bg-blue-500\">\n            <FooterContainer />\n          </footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/DogSwipe.tsx",["89","90","91","92","93"],"import React from \"react\";\nimport { Link, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport DogCard from \"../components/dog/DogCard\";\nimport { worker } from \"cluster\";\nimport { url } from \"inspector\";\n\ninterface IProps extends RouteComponentProps<any> {\n  userId: number;\n}\n\ninterface dog {\n  adopted: boolean;\n  age: number;\n  bio: string;\n  breed: string;\n  energyLevel: string;\n  id: number;\n  image: string;\n  location: string;\n  name: string;\n  sex: string;\n  sheddingLevel: string;\n  shelterId: number;\n}\n\ninterface IState {\n  userId: number;\n  dogImage: string;\n  dogArray: Array<dog>;\n  currentDog: number;\n}\n\nexport default class DogSwipe extends React.Component<\n  IProps & RouteComponentProps<any>,\n  IState\n> {\n  state = {\n    userId: this.props.userId,\n    dogImage: \"\",\n    dogArray: [\n      {\n        adopted: false,\n        age: 0,\n        bio: \"\",\n        breed: \"\",\n        energyLevel: \"\",\n        id: 0,\n        image: \"\",\n        location: \"\",\n        name: \"\",\n        sex: \"\",\n        sheddingLevel: \"\",\n        shelterId: 0,\n      },\n    ],\n    currentDog: 0,\n  };\n\n  componentDidMount() {\n    Axios.get(\n      \"http://localhost:8080/users/\" + this.state.userId + \"/dogs\"\n    ).then((resp) => {\n      this.setState({ dogArray: resp.data });\n      console.log(resp.data);\n      if (this.state.dogArray.length > 0) {\n        this.getDogImage(this.state.dogArray[this.state.currentDog].breed);\n      }\n    });\n  }\n\n  handleLike = (dogId: number) => {\n    Axios.get(\n      \"http://localhost:8080/users/\" +\n        this.state.userId +\n        \"/dogs/\" +\n        dogId +\n        \"/like\"\n    ).then((resp) => {\n      // this.getDogImage();\n      this.setState({ currentDog: this.state.currentDog + 1 });\n      this.getDogObjectReady();\n    });\n  };\n\n  handleDislike = (dogId: number) => {\n    Axios.get(\n      \"http://localhost:8080/users/\" +\n        this.state.userId +\n        \"/dogs/\" +\n        dogId +\n        \"/dislike\"\n    ).then((resp) => {\n      // this.getDogImage();\n      this.setState({ currentDog: this.state.currentDog + 1 });\n      this.getDogObjectReady();\n    });\n  };\n\n  getDogImage = (dogBreed: string) => {\n    // get random image -TODO: TIE TO SPECIFIC BREED!!!\n    const urlArray = dogBreed.split(\" \");\n    const newArray: Array<string> = [];\n\n    for (let i = urlArray.length - 1; i >= 0; i--) {\n      newArray.push(urlArray[i].toLowerCase());\n    }\n\n    Axios.get(\n      \"https://dog.ceo/api/breed/\" + newArray.join(\"-\") + \"/images/random\"\n    )\n      .then((resp) => {\n        console.log(resp.data);\n        this.setState({ dogImage: resp.data.message });\n        // this.setState({ currentDog: (this.state.currentDog += 1) });\n      })\n      .catch((err) => {\n        Axios.get(\"https://dog.ceo/api/breeds/image/random\").then((resp) => {\n          console.log(resp.data);\n          this.setState({ dogImage: resp.data.message });\n          // this.setState({ currentDog: (this.state.currentDog += 1) });\n        });\n      });\n  };\n\n  getDogObjectReady = () => {\n    if (\n      this.state.currentDog + 1 < this.state.dogArray.length &&\n      this.state.dogArray.length > 0\n    ) {\n      this.getDogImage(this.state.dogArray[this.state.currentDog].breed);\n    } else {\n      return (\n        <p>\n          No more dogs available. Review your \"liked\" dogs or check back later\n          to review additional dogs.\n        </p>\n      );\n    }\n  };\n\n  getDogCard = () => {\n    if (\n      this.state.dogArray.length > 0 &&\n      this.state.currentDog < this.state.dogArray.length\n    ) {\n      return (\n        <DogCard\n          dogImage={this.state.dogImage}\n          returnLike={this.handleLike}\n          returnDislike={this.handleDislike}\n          dogObject={this.state.dogArray[this.state.currentDog]}\n        />\n      );\n    } else {\n      return (\n        <p>\n          No more dogs available. Review your \"liked\" dogs or check back later\n          to review additional dogs.\n        </p>\n      );\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"bg-gray-200 p-4 h-screen mx-auto\">\n          <h1>Swipe Through Available Dogs!</h1>\n          <div>{this.getDogCard()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/Home.tsx",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/NewUserForm.tsx",["94","95"],"import React from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport UserPreferences from \"./UserPreferences\";\n\ninterface IProps {\n  onCreate: (newName: string, newId: number, newUserType: string) => void;\n}\n\nexport default class NewUserForm extends React.Component<IProps> {\n  state = {\n    redirect: false,\n    userId: \"\",\n    user: {\n      userName: \"\",\n      email: \"\",\n      password: \"\",\n      preferencesSet: false,\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newUser: any = { ...this.state.user };\n    newUser[event.target.name] = event.target.value;\n\n    this.setState({ user: newUser });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>) => {\n    event.preventDefault();\n\n    Axios.post(\"http://localhost:8080/users\", this.state.user)\n      .then((resp) => {\n        this.setState({ userId: resp.data.id });\n        Axios.post(\"http://localhost:8080/login\", this.state.user)\n          .then((resp) => {\n            this.setState({ redirect: true });\n            this.props.onCreate(resp.data.userName, resp.data.id, \"User\");\n          })\n          .catch((err) => {\n            alert(\"Invalid login\");\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Unable to Create Account: Email Address must be unique.\");\n      });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { userId: this.state.userId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Create User Account</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"userName\"\n                required\n                placeholder=\"Full Name\"\n                onChange={this.handleChange}\n                value={this.state.user.userName}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"email\"\n                name=\"email\"\n                required\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={this.state.user.email}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"password\"\n                name=\"password\"\n                required\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={this.state.user.password}\n              ></input>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Sign Up!\n              </button>\n            </form>\n            <Link className=\"text-2xl\" to=\"/shelters/new\">\n              Create a Shelter Account Instead\n            </Link>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/LoginForm.tsx",["96","97","98","99","100","101","102","103"],"import React, { ReactPropTypes } from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\n\ninterface IProps{\n    onLogin: (newName: string, id: number, newUserType: string) => void\n}\n\nexport default class LoginForm extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n  }\n      state = {\n          placeholderValue: \"Email\",\n          redirect: false,\n          userType: \"User\",\n          user: {\n            email: \"\",\n            password: \"\",\n          },\n      }\n\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newUser: any = { ...this.state.user };\n    newUser[event.target.name] = event.target.value;\n\n    this.setState({ user: newUser });\n  };\n\n  handleSelect = () : void =>\n  {\n    this.setState({userType: (this.state.userType == \"User\") ? \"Shelter\" : \"User\"});\n    this.setState({placeholderValue: (this.state.placeholderValue == \"Email\") ? \"Username\" : \"Email\"});\n  }\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    if(this.state.userType == \"User\")\n    {\n      console.log(this.state);\n      Axios.post(\"http://localhost:8080/login\", this.state.user).then((resp) => {\n        console.log(resp.data);\n      this.setState({redirect: true });\n      this.props.onLogin(resp.data.userName, resp.data.id, \"User\");\n      }).catch(err => {alert(\"Invalid login\")});\n    }\n    else if(this.state.userType == \"Shelter\")\n    {\n      Axios.post(\"http://localhost:8080/shelterLogin\", {shelterName: this.state.user.email, shelterPassword: this.state.user.password})\n      .then((resp) => {\n        console.log(resp.data);\n        this.setState({redirect: true });\n       this.props.onLogin(resp.data.shelterName, resp.data.id, \"Shelter\");\n      }).catch(err => {alert(\"Invalid login\")});\n\n    }\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Welcome Bark!</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"email\"\n                placeholder={this.state.placeholderValue}\n                onChange={this.handleChange}\n                value={this.state.user.email}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={this.state.user.password}\n              ></input>\n              <div>\n              <input type=\"checkbox\" onChange={this.handleSelect}/>\n              <label> Shelter Login?</label>\n              </div>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Login!\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/NewDogForm.tsx",["104"],"import React from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\ninterface IProps {\n  shelterId: number;\n}\n\nexport default class NewDogForm extends React.Component<IProps> {\n  state = {\n    redirect: false,\n    shelterId: this.props.shelterId,\n    dogId: -1,\n    dog: {\n      name: \"\",\n      age: \"\",\n      sex: \"\",\n      breed: \"\",\n      image: \"\",\n      location: \"\",\n      sheddingLevel: \"\",\n      energyLevel: \"\",\n      bio: \"\",\n      isAdopted: false,\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newDog: any = { ...this.state.dog };\n    newDog[event.target.name] = event.target.value;\n    this.setState({ dog: newDog });\n  };\n\n  handleSelect = (\n    event: React.ChangeEvent<HTMLSelectElement>\n  ): void | undefined => {\n    const newSelection: any = { ...this.state.dog };\n    newSelection[event.target.name] = event.target.value;\n    this.setState({ dog: newSelection });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    console.log(this.state);\n    Axios.post(\n      \"http://localhost:8080/shelters/\" + this.state.shelterId + \"/dogs\",\n      this.state.dog\n    ).then((resp) => {\n      console.log(resp.data);\n      this.setState({ dogId: resp.data.id, redirect: true });\n    });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { dogId: this.state.dogId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-40%\">\n            <div className=\"text-3xl\">Create New Dog</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div>Name</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"name\"\n                required\n                placeholder=\"Name\"\n                onChange={this.handleChange}\n                value={this.state.dog.name}\n              ></input>\n              <div>Age</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"number\"\n                name=\"age\"\n                required\n                placeholder=\"Age (years)\"\n                onChange={this.handleChange}\n                value={this.state.dog.age}\n              ></input>\n              <div>Gender</div>\n              <select\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"sex\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.sex}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Male\">Male</option>\n                <option value=\"Female\">Female</option>\n              </select>\n              <div>Breed</div>\n              <input\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"breed\"\n                required\n                placeholder=\"Breed\"\n                onChange={this.handleChange}\n                value={this.state.dog.breed}\n              ></input>\n              <div>Image Link</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"image\"\n                placeholder=\"Link to Image\"\n                onChange={this.handleChange}\n                value={this.state.dog.image}\n              ></input>\n              <div>Shedding Level</div>\n              <select\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"sheddingLevel\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.sheddingLevel}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n              <div>Energy Level</div>\n              <select\n                className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                name=\"energyLevel\"\n                required\n                onChange={this.handleSelect}\n                value={this.state.dog.energyLevel}\n              >\n                <option value=\"\">Select</option>\n                <option value=\"Low\">Low</option>\n                <option value=\"Medium\">Medium</option>\n                <option value=\"High\">High</option>\n              </select>\n              <div>Bio</div>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"bio\"\n                placeholder=\"Bio\"\n                onChange={this.handleChange}\n                value={this.state.dog.bio}\n              ></input>\n\n              <button\n                className=\"text-2xl rounded-md py-2 px-2 mt-5 mb-20 bg-blue-300\"\n                type=\"submit\"\n              >\n                Create Dog\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/dog/DogCard.tsx",["105","106","107","108","109","110","111"],"import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect, Link, RouteComponentProps } from \"react-router-dom\";\n\ninterface IProps {\n  dogImage: string;\n  returnLike: Function;\n  returnDislike: Function;\n  dogObject: {\n    adopted: boolean;\n    age: number;\n    bio: string;\n    breed: string;\n    energyLevel: string;\n    id: number;\n    image: string;\n    location: string;\n    name: string;\n    sex: string;\n    sheddingLevel: string;\n    shelterId: number;\n  };\n}\n\nconst DogCard: React.FC<IProps> = (props) => {\n  const handleLike = () => {\n    props.returnLike(props.dogObject.id);\n  };\n\n  const handleDislike = () => {\n    props.returnDislike(props.dogObject.id);\n  };\n\n  return (\n    // <div className=\"flex bg-gray-200 p-8 justify-center h-screen max-h-96 align-middle\">\n    <div className=\"flex w-11/12 bg-gradient-to-br from-gray-600 to-purple-600 rounded-xl max-w-screen-lg mx-auto p-2\">\n      <div className=\"flex-none flex w-1/12\">\n        <button className=\"content-center\" onClick={handleDislike}>\n          Growl (Dislike)\n        </button>\n      </div>\n      {/* This is the container for the dog image and information */}\n      <div className=\"flex-none w-10/12 bg-gradient-to-br from-gray-400 to-purple-400 rounded-xl mx-auto p-2\">\n        <div className=\"mx-auto\">\n          <img\n            src={props.dogImage}\n            alt=\"Dog Photo\"\n            className=\"mx-auto w-10/12 rounded-xl\"\n          />\n        </div>\n\n        {/* This is for the dog information */}\n        <div className=\"flex flex-col w-3/4 mx-auto\">\n          {/* This is for the dog name and age */}\n          <div className=\"flex text-2xl font-semibold\">\n            <span>Name: {props.dogObject.name + \" ,\"}</span>\n            <span>&nbsp; Age: {props.dogObject.age}</span>\n          </div>\n\n          {/* This is for the other dog attributes */}\n          <div className=\"flex text-xl font-semibold text-gray-700\">\n            <span>Breed: {props.dogObject.breed + \" ,\"}</span>\n            <span>&nbsp; Gender: {props.dogObject.sex}</span>\n          </div>\n\n          <div className=\"flex text-xl font-semibold text-gray-700\">\n            <span>Energy Level: {props.dogObject.energyLevel + \" ,\"}</span>\n            <span>&nbsp; Coat Type: {props.dogObject.sheddingLevel}</span>\n          </div>\n          <div className=\"text-left text-xl font-semibold text-gray-700\">\n            About Me: {props.dogObject.bio}\n          </div>\n\n          <div className=\"text-left text-xl font-semibold text-gray-700\">\n            Located in Shelter #: {props.dogObject.shelterId}\n          </div>\n        </div>\n      </div>\n      <div className=\"flex-none flex content-center w-1/12\">\n        <button className=\"none\" onClick={handleLike}>\n          Bark (Like)\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DogCard;\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/ModifyUser.tsx",["112","113","114","115"],"import React, { ComponentProps } from \"react\";\nimport { Location } from \"history\";\nimport { Link, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { StaticContext } from \"react-router\";\nimport axios from \"axios\";\n\ninterface IProps extends RouteComponentProps<any> {\n  userId: number;\n}\n\ninterface IState {\n  redirect: boolean;\n  breeds: Array<string> | null;\n  user: {\n    userId: number;\n    userName: string;\n    email: string;\n    preferencesSet: boolean;\n    breedPreference: string;\n    agePreference: string;\n    sizePreference: string;\n    genderPreference: string;\n    goodWithPreference: string;\n    coatLengthPreference: string;\n    energyLevelPreference: string;\n  };\n}\n\nexport default class ModifyUser extends React.Component<\n  IProps & ComponentProps<any>,\n  IState\n> {\n  state = {\n    redirect: false,\n    breeds: [],\n    user: {\n      userId: -1,\n      userName: \"\",\n      email: \"\",\n      preferencesSet: false,\n      breedPreference: \"any\",\n      agePreference: \"any\",\n      sizePreference: \"any\",\n      genderPreference: \"any\",\n      goodWithPreference: \"any\",\n      coatLengthPreference: \"any\",\n      energyLevelPreference: \"any\",\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ): void | undefined => {\n    const newUser: any = { ...this.state.user };\n\n    newUser[event.target.name] = event.target.value;\n\n    this.setState({ user: newUser });\n  };\n\n  componentDidMount() {\n    // Need to get userId from props and enter here...\n    axios\n      .get(\"http://localhost:8080/users/\" + this.props.userId)\n      .then((resp) => {\n        const newUser: any = { ...this.state.user };\n        newUser.userId = resp.data.id;\n        newUser.userName = resp.data.userName;\n        newUser.email = resp.data.email;\n        newUser.preferencesSet = resp.data.preferencesSet;\n        newUser.breedPreference = resp.data.breedPreference;\n        newUser.agePreference = resp.data.agePreference;\n        newUser.sizePreference = resp.data.sizePreference;\n        newUser.genderPreference = resp.data.genderPreference;\n        newUser.goodWithPreference = resp.data.goodWithPreference;\n        newUser.coatLengthPreference = resp.data.coatLengthPreference;\n        newUser.energyLevelPreference = resp.data.energyLevelPreference;\n\n        this.setState({ user: newUser });\n\n        axios.get(\"http://localhost:8080/dogs/breeds\").then((resp) => {\n          const sortedBreeds = resp.data.sort();\n          this.setState({ breeds: sortedBreeds });\n        });\n      });\n  }\n\n  breedSelect = () => {\n    return this.state.breeds.map((breed) => {\n      return <option value={breed}>{breed}</option>;\n    });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void | undefined => {\n    event.preventDefault();\n\n    Axios.put(\"http://localhost:8080/users/update\", this.state.user).then(\n      (resp) => {\n        this.setState({ redirect: true });\n      }\n    );\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { userId: this.props.userId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Update User</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Name</div>\n                <div>\n                  <input\n                    className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    type=\"text\"\n                    name=\"userName\"\n                    placeholder=\"Full Name\"\n                    onChange={this.handleChange}\n                    value={this.state.user.userName}\n                  ></input>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Email</div>\n                <div>\n                  <input\n                    className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Email\"\n                    onChange={this.handleChange}\n                    value={this.state.user.email}\n                  ></input>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Breed</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"breedPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.breedPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    {this.breedSelect()}\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Age</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"agePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.agePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Puppy\">Puppy</option>\n                    <option value=\"Young\">1-3 Years</option>\n                    <option value=\"Adult\">4-8 Years</option>\n                    <option value=\"Senior\">9+ Years</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Size</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"sizePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.sizePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Small\">Under 15 lbs</option>\n                    <option value=\"Medium\">15 - 35 lbs</option>\n                    <option value=\"Large\">35 - 75 lbs</option>\n                    <option value=\"Ex-Large\">75+ lbs</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Gender</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"genderPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.genderPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Good With</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"goodWithPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.goodWithPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Everyone\">Everyone</option>\n                    <option value=\"Kids\">Kids</option>\n                    <option value=\"Adults\">Adults Only</option>\n                    <option value=\"Family\">Family Only</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Coat Length</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"coatLengthPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.coatLengthPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Short\">Short</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Long\">Long</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Energy Level</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"energyLevelPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.user.energyLevelPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </select>\n                </div>\n              </div>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-blue-400\"\n                type=\"submit\"\n              >\n                Save Updates\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/NewShelterForm.tsx",["116"],"import React from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\ninterface IProps {\n  onCreate: (newName: string, newId: number, newUserType: string) => void;\n}\n\nexport default class NewShelterForm extends React.Component<IProps> {\n  state = {\n    redirect: false,\n    shelterId: \"\",\n    shelter: {\n      shelterName: \"\",\n      address: \"\",\n      contactInfo: \"\",\n      shelterPassword: \"\",\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newShelter: any = { ...this.state.shelter };\n    newShelter[event.target.name] = event.target.value;\n\n    this.setState({ shelter: newShelter });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void => {\n    event.preventDefault();\n    console.log(this.state);\n    Axios.post(\"http://localhost:8080/shelters\", this.state.shelter)\n      .then((resp) => {\n        console.log(resp.data);\n        this.setState({ shelterId: resp.data.id });\n        console.log(this.state.shelter);\n        Axios.post(\"http://localhost:8080/shelterLogin\", this.state.shelter)\n          .then((resp) => {\n            console.log(resp.data);\n            this.props.onCreate(resp.data.shelterName, resp.data.id, \"Shelter\");\n            this.setState({ redirect: true });\n          })\n          .catch((err) => {\n            console.log(err);\n            alert(\"Invalid login\");\n          });\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"Unable to Create Account: Shelter Name must be unique.\");\n      });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        //   need to login and direct to new dog page\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { shelterId: this.state.shelterId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Create New Shelter</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"shelterName\"\n                required\n                placeholder=\"Shelter Name\"\n                onChange={this.handleChange}\n                value={this.state.shelter.shelterName}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"address\"\n                required\n                placeholder=\"Address\"\n                onChange={this.handleChange}\n                value={this.state.shelter.address}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"text\"\n                name=\"contactInfo\"\n                required\n                placeholder=\"Contact Information\"\n                onChange={this.handleChange}\n                value={this.state.shelter.contactInfo}\n              ></input>\n              <input\n                className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                type=\"password\"\n                name=\"shelterPassword\"\n                required\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={this.state.shelter.shelterPassword}\n              ></input>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Sign Up!\n              </button>\n            </form>\n            <Link className=\"text-2xl\" to=\"/users/new\">\n              Create a User Account Instead\n            </Link>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/ModifyShelter.tsx",["117"],"import React from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\ninterface IProps extends RouteComponentProps<any> {\n  shelterId: number;\n}\n\nexport default class ModifyShelter extends React.Component<IProps> {\n  state = {\n    redirect: false,\n    shelter: {\n      id: this.props.shelterId,\n      shelterName: \"\",\n      address: \"\",\n      contactInfo: \"\",\n      shelterPassword: \"\",\n    },\n  };\n\n  componentDidMount() {\n    Axios.get(\"http://localhost:8080/shelters/\" + this.props.shelterId).then(\n      (resp) => {\n        const newShelter: any = { ...this.state.shelter };\n        newShelter.shelterName = resp.data.shelterName;\n        newShelter.address = resp.data.address;\n        newShelter.contactInfo = resp.data.contactInfo;\n\n        this.setState({ shelter: newShelter });\n      }\n    );\n  }\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ): void | undefined => {\n    const newShelter: any = { ...this.state.shelter };\n    newShelter[event.target.name] = event.target.value;\n\n    this.setState({ shelter: newShelter });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void | undefined => {\n    event.preventDefault();\n    console.log(this.state.shelter);\n    Axios.put(\"http://localhost:8080/shelters/update\", this.state.shelter).then(\n      (resp) => {\n        this.setState({ redirect: true });\n      }\n    );\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { shelterId: this.state.shelter.id },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Update Shelter</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Shelter Name</div>\n                <div>\n                  <input\n                    className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    type=\"text\"\n                    name=\"shelterName\"\n                    required\n                    placeholder=\"Shelter Name\"\n                    onChange={this.handleChange}\n                    value={this.state.shelter.shelterName}\n                  ></input>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Address</div>\n                <div>\n                  <input\n                    className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    type=\"text\"\n                    name=\"address\"\n                    required\n                    placeholder=\"Address\"\n                    onChange={this.handleChange}\n                    value={this.state.shelter.address}\n                  ></input>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Contact Information</div>\n                <div>\n                  <input\n                    className=\"m-2 p-2 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    type=\"text\"\n                    name=\"contactInfo\"\n                    required\n                    placeholder=\"Contact Information\"\n                    onChange={this.handleChange}\n                    value={this.state.shelter.contactInfo}\n                  ></input>\n                </div>\n              </div>\n\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-red-400\"\n                type=\"submit\"\n              >\n                Save Changes\n              </button>\n            </form>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/FooterContainer.tsx",[],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/user/UserPreferences.tsx",["118","119","120"],"import React, { ComponentProps } from \"react\";\nimport { Location } from \"history\";\nimport { Link, Route, Redirect, RouteComponentProps } from \"react-router-dom\";\nimport Axios from \"axios\";\nimport { StaticContext } from \"react-router\";\n\ninterface IProps extends RouteComponentProps<any> {\n  userId: string;\n}\n\ninterface IState {\n  redirect: boolean;\n  preferences: {\n    userId: number;\n    preferencesSet: boolean;\n    breedPreference: string;\n    agePreference: string;\n    sizePreference: string;\n    genderPreference: string;\n    goodWithPreference: string;\n    coatLengthPreference: string;\n    energyLevelPreference: string;\n  };\n}\n\nexport default class UserPreferences extends React.Component<\n  IProps & ComponentProps<any>,\n  IState\n> {\n  state = {\n    redirect: false,\n    preferences: {\n      userId: (this.props.location.state.userId as any) || \"\",\n      preferencesSet: false,\n      breedPreference: \"any\",\n      agePreference: \"any\",\n      sizePreference: \"any\",\n      genderPreference: \"any\",\n      goodWithPreference: \"any\",\n      coatLengthPreference: \"any\",\n      energyLevelPreference: \"any\",\n    },\n  };\n\n  handleChange = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ): void | undefined => {\n    const newPrefs: any = { ...this.state.preferences };\n\n    newPrefs[event.target.name] = event.target.value;\n    newPrefs.preferencesSet = true;\n    console.log(newPrefs);\n    this.setState({ preferences: newPrefs });\n  };\n\n  handleSubmit = (event: React.FormEvent<HTMLElement>): void | undefined => {\n    event.preventDefault();\n\n    Axios.put(\n      \"http://localhost:8080/users/preferences\",\n      this.state.preferences\n    ).then((resp) => {\n      this.setState({ redirect: true });\n      console.log(resp.data);\n    });\n  };\n\n  render(): React.ReactNode {\n    if (this.state.redirect) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/\",\n            state: { userId: this.state.preferences.userId },\n          }}\n        />\n      );\n    } else {\n      return (\n        <div className=\"flex h-screen justify-center\">\n          <div className=\"m-12 w-30% \">\n            <div className=\"text-3xl\">Set Dog Preferences</div>\n            <form className=\"flex flex-col\" onSubmit={this.handleSubmit}>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Breed</div>\n\n                {console.log(\"UserID State: \", this.state.preferences.userId)}\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"breedPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.breedPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Golden Retreiver\">Golden Retreiver</option>\n                    <option value=\"Get List from DB\">Get List from DB</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Age</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"agePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.agePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Puppy\">Puppy</option>\n                    <option value=\"Young\">1-3 Years</option>\n                    <option value=\"Adult\">4-8 Years</option>\n                    <option value=\"Senior\">9+ Years</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Size</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"sizePreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.sizePreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Small\">Under 15 lbs</option>\n                    <option value=\"Medium\">15 - 35 lbs</option>\n                    <option value=\"Large\">35 - 75 lbs</option>\n                    <option value=\"Ex-Large\">75+ lbs</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Gender</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"genderPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.genderPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Good With</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"goodWithPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.goodWithPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Everyone\">Everyone</option>\n                    <option value=\"Kids\">Kids</option>\n                    <option value=\"Adults\">Adults Only</option>\n                    <option value=\"Family\">Family Only</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Coat Length</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"coatLengthPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.coatLengthPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Short\">Short</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Long\">Long</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"flex flex-row justify-between items-center\">\n                <div>Energy Level</div>\n                <div>\n                  <select\n                    className=\"m-2 p-2 w-60 rounded-md border-solid border-2 border-gray-400 text-left\"\n                    name=\"energyLevelPreference\"\n                    onChange={this.handleChange}\n                    value={this.state.preferences.energyLevelPreference}\n                  >\n                    <option value=\"null\">Any</option>\n                    <option value=\"Low\">Low</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"High\">High</option>\n                  </select>\n                </div>\n              </div>\n              <button\n                className=\"text-2xl rounded-full py-2 px-2 bg-blue-400\"\n                type=\"submit\"\n              >\n                Save Preferences\n              </button>\n            </form>\n            <Link className=\"text-2xl\" to=\"/\">\n              Skip Preferences (all available dogs shown)\n            </Link>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/acapp5K1/1-revature-code/barkerfrontend/src/components/shelter/ShelterDogs.tsx",["121","122","123"],"import React from \"react\";\nimport { Redirect, RouteComponentProps, Link } from \"react-router-dom\";\nimport Axios from \"axios\";\n\ninterface IProps {\n    shelterId: number;\n  }\ninterface IState{\n  dogs: Array<dog>;\n}\ninterface dog{\n    id: number,\n    name: string,\n    age: string,\n    breed: string,\n    image: string,\n    sex: string,\n    location: string,\n    sheddingLevel: string,\n    energyLevel: string,\n    bio: string,\n    adopted: boolean,\n    shelterId: number\n}\n\n\nexport default class ShelterDogs extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      dogs: []\n    }\n    this.getDogs();\n  }\n\n    editDog = (): void => {\n      alert(\"Not implemented yet\");\n    }\n\n\n    getDogs = (): void => {\n          Axios.get(\"http://localhost:8080/shelters/\" + this.props.shelterId).then((resp) => {\n            //console.log(resp.data.dogs);\n            resp.data.dogs.forEach( (value: dog) => {\n                //console.log(value.bio);\n                this.state.dogs.push(value);\n            })\n            this.setState({dogs: this.state.dogs});\n          }).catch(err => {alert(\"There was an error getting the dogs\")});\n        \n    }\n\n  render(): React.ReactNode {\n    return(\n        <div>\n        {this.state.dogs.map(({name, image, age, sex, adopted}) => (\n          <div>\n            <p>{name}, {age}, {sex}, {adopted.toString()}</p>\n            <img\n                width=\"200\"\n                height=\"100\"\n                src={image}\n                alt={\"Didn't get pic\"}\n              />\n              <button className=\"text-2xl rounded-full py-2 px-2 bg-red-400\" onClick={this.editDog}>\n                Edit Dog\n                </button>\n            <p> ------------------------- </p>\n            </div>         \n        ))}\n        </div>\n    );\n}\n}\n\n",["124","125"],"/Users/acapp5K1/1-revature-code/barkerfrontend/src/containers/NavBarContainer.tsx",["126","127"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport logo from \"../images/barker2.png\";\n\ninterface IProps {\n  user: string;\n  userType: string;\n  onLogout: () => void;\n  //changeLogin: (newName: string) => void;\n}\n\nexport default class NavBarContainer extends React.Component<IProps> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      user: props.user,\n      userType: props.userType,\n    };\n  }\n\n  changeLogin(newName: string) {\n    this.setState({ user: newName });\n  }\n\n  render() {\n    //Three Conditions.\n    //1. Not logged in.\n    //2. Logged in as User.\n    //3. Logged in as Shelter.\n\n    if (this.props.userType == \"User\") {\n      return (\n        <div className=\"grid grid-cols-6 items-center h-full\">\n          <NavLink to=\"/\">\n            <div className=\"bg-blue-500 w-32 ml-2 p-1\">\n              <img src={logo} alt=\"Barker\" />\n            </div>\n          </NavLink>\n          <div className=\"col-span-3 flex flex-row justify-around p-2\">\n            <NavLink to=\"/users/modify\">\n              <div className=\"bg-blue-500\">Update User Preferences</div>\n            </NavLink>\n            <NavLink to=\"/swipe\">\n              <div className=\"bg-blue-500\">Swipe</div>\n            </NavLink>\n            <div className=\"bg-blue-500\">Liked Dogs/NI</div>\n          </div>\n          <div className=\"col-span-2 flex flex-row justify-around p-2\">\n            <div className=\"bg-blue-500\">{this.props.user}</div>\n            <NavLink to=\"/\">\n              <button\n                className=\"rounded-md bg-white\"\n                onClick={this.props.onLogout}\n              >\n                LOGOUT\n              </button>\n            </NavLink>\n          </div>\n        </div>\n      );\n    } else if (this.props.userType == \"Shelter\") {\n      return (\n        <div className=\"grid grid-cols-6 items-center h-full\">\n          <NavLink to=\"/\">\n            <div className=\"bg-blue-500 w-32 ml-2 p-1\">\n              <img src={logo} alt=\"Barker\" />\n            </div>\n          </NavLink>\n          <div className=\"col-span-3 flex flex-row justify-around p-2\">\n            <NavLink to=\"/shelterDogs\">\n              <div className=\"bg-blue-500\">My Dogs</div>\n            </NavLink>\n            <NavLink to=\"/dog/new\">\n              <div className=\"bg-blue-500\">Add Dog</div>\n            </NavLink>\n          </div>\n          <div className=\"col-span-2 flex flex-row justify-around p-2\">\n            <NavLink to=\"/shelters/modify\">\n              <div className=\"bg-blue-500\">{this.props.user}</div>\n            </NavLink>\n            <NavLink to=\"/\">\n              <button\n                className=\"rounded-md bg-white\"\n                onClick={this.props.onLogout}\n              >\n                LOGOUT\n              </button>\n            </NavLink>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"grid grid-cols-6 items-center h-full\">\n          <NavLink to=\"/\">\n            <div className=\"bg-blue-500 w-32 ml-2 p-1\">\n              <img src={logo} alt=\"Barker\" />\n            </div>\n          </NavLink>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div className=\"col-span-2 flex flex-row justify-around p-2\">\n            <NavLink to=\"/login\">\n              <button className=\"rounded-md bg-white\">LOGIN</button>\n            </NavLink>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":8,"nodeType":"134","messageId":"135","endLine":2,"endColumn":12},{"ruleId":"132","severity":1,"message":"136","line":5,"column":3,"nodeType":"134","messageId":"135","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"137","line":7,"column":3,"nodeType":"134","messageId":"135","endLine":7,"endColumn":11},{"ruleId":"132","severity":1,"message":"138","line":9,"column":3,"nodeType":"134","messageId":"135","endLine":9,"endColumn":22},{"ruleId":"132","severity":1,"message":"139","line":10,"column":3,"nodeType":"134","messageId":"135","endLine":10,"endColumn":9},{"ruleId":"132","severity":1,"message":"140","line":11,"column":3,"nodeType":"134","messageId":"135","endLine":11,"endColumn":13},{"ruleId":"132","severity":1,"message":"141","line":21,"column":10,"nodeType":"134","messageId":"135","endLine":21,"endColumn":19},{"ruleId":"132","severity":1,"message":"142","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":14},{"ruleId":"132","severity":1,"message":"143","line":2,"column":16,"nodeType":"134","messageId":"135","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"137","line":2,"column":23,"nodeType":"134","messageId":"135","endLine":2,"endColumn":31},{"ruleId":"132","severity":1,"message":"144","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":16},{"ruleId":"132","severity":1,"message":"145","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":13},{"ruleId":"132","severity":1,"message":"138","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"132","severity":1,"message":"146","line":4,"column":8,"nodeType":"134","messageId":"135","endLine":4,"endColumn":23},{"ruleId":"132","severity":1,"message":"147","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":31},{"ruleId":"132","severity":1,"message":"138","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"132","severity":1,"message":"142","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"148","severity":1,"message":"149","line":11,"column":3,"nodeType":"150","messageId":"151","endLine":13,"endColumn":4},{"ruleId":"152","severity":1,"message":"153","line":36,"column":51,"nodeType":"154","messageId":"155","endLine":36,"endColumn":53},{"ruleId":"152","severity":1,"message":"153","line":37,"column":67,"nodeType":"154","messageId":"155","endLine":37,"endColumn":69},{"ruleId":"152","severity":1,"message":"153","line":42,"column":28,"nodeType":"154","messageId":"155","endLine":42,"endColumn":30},{"ruleId":"152","severity":1,"message":"153","line":51,"column":33,"nodeType":"154","messageId":"155","endLine":51,"endColumn":35},{"ruleId":"132","severity":1,"message":"142","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":24},{"ruleId":"132","severity":1,"message":"156","line":1,"column":8,"nodeType":"134","messageId":"135","endLine":1,"endColumn":13},{"ruleId":"132","severity":1,"message":"157","line":2,"column":17,"nodeType":"134","messageId":"135","endLine":2,"endColumn":26},{"ruleId":"132","severity":1,"message":"158","line":2,"column":28,"nodeType":"134","messageId":"135","endLine":2,"endColumn":36},{"ruleId":"132","severity":1,"message":"137","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":18},{"ruleId":"132","severity":1,"message":"142","line":3,"column":20,"nodeType":"134","messageId":"135","endLine":3,"endColumn":24},{"ruleId":"132","severity":1,"message":"138","line":3,"column":26,"nodeType":"134","messageId":"135","endLine":3,"endColumn":45},{"ruleId":"159","severity":1,"message":"160","line":45,"column":11,"nodeType":"161","endLine":49,"endColumn":13},{"ruleId":"132","severity":1,"message":"162","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"142","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":14},{"ruleId":"132","severity":1,"message":"143","line":3,"column":16,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"163","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":23},{"ruleId":"132","severity":1,"message":"138","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"132","severity":1,"message":"142","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"132","severity":1,"message":"162","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"143","line":3,"column":16,"nodeType":"134","messageId":"135","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"163","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":23},{"ruleId":"132","severity":1,"message":"137","line":2,"column":10,"nodeType":"134","messageId":"135","endLine":2,"endColumn":18},{"ruleId":"132","severity":1,"message":"138","line":2,"column":20,"nodeType":"134","messageId":"135","endLine":2,"endColumn":39},{"ruleId":"132","severity":1,"message":"142","line":2,"column":41,"nodeType":"134","messageId":"135","endLine":2,"endColumn":45},{"ruleId":"128","replacedBy":"164"},{"ruleId":"130","replacedBy":"165"},{"ruleId":"152","severity":1,"message":"153","line":31,"column":29,"nodeType":"154","messageId":"155","endLine":31,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":61,"column":36,"nodeType":"154","messageId":"155","endLine":61,"endColumn":38},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'BrowserRouter' is defined but never used.","'Redirect' is defined but never used.","'RouteComponentProps' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'stringify' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'worker' is defined but never used.","'url' is defined but never used.","'UserPreferences' is defined but never used.","'ReactPropTypes' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Axios' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Location' is defined but never used.","'StaticContext' is defined but never used.",["166"],["167"],"no-global-assign","no-unsafe-negation"]